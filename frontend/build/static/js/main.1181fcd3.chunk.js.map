{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","Row","Col","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","listOrders","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","confirm","delete","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","UserListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"sMAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QCjCnBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA6B,6BAE7BC,EAA2B,2BAE3BC,EAAmB,mBCPnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAGdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAGrBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAGlBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBCpCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAGtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCK7BC,GAAUC,0BAAgB,CAC5BC,YCD8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKnF,EACD,MAAO,CAAEoF,SAAS,EAAMH,SAAU,IAEtC,KAAKhF,EACD,MAAO,CACHmF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,KAAKrF,EACD,MAAO,CAAEkF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDffS,eCqBiC,WAAmD,IAAlDT,EAAiD,uDAAzC,CAAEU,QAAS,CAAEC,QAAS,KAAQT,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAKhF,EACD,OAAO,aAAEiF,SAAS,GAASJ,GAE/B,KAAK5E,EACD,MAAO,CAAEgF,SAAS,EAAOM,QAASR,EAAOG,SAE7C,KAAKhF,EACD,MAAO,CAAE+E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDhCfY,cCqCgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK7E,EACD,MAAO,CAAE8E,SAAS,GAEtB,KAAK7E,EACD,MAAO,CAAE6E,SAAS,EAAOS,SAAS,GAEtC,KAAKrF,EACD,MAAO,CAAE4E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDhDfc,cCsDgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK1E,EACD,MAAO,CAAE2E,SAAS,GAEtB,KAAK1E,EACD,MAAO,CAAE0E,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAK1E,EACD,MAAO,CAAEyE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKzE,EACD,MAAO,GAEX,QACI,OAAOoE,IDpEfe,cCyEgC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKtE,EACD,MAAO,CAAEuE,SAAS,GAEtB,KAAKtE,EACD,MAAO,CAAEsE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAKtE,EACD,MAAO,CAAEqE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrE,EACD,MAAO,CAAE0E,QAAS,IAEtB,QACI,OAAOV,IDvFfgB,oBC6FsC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKlE,EACD,MAAO,CAAEmE,SAAS,GAEtB,KAAKlE,EACD,MAAO,CAAEkE,SAAS,EAAOS,SAAS,GAEtC,KAAK1E,EACD,MAAO,CAAEiE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKjE,EACD,MAAO,GAEX,QACI,OAAO4D,ID3GfiB,gBCgHkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAK9D,EACD,MAAO,CAAE+D,SAAS,EAAMH,SAAU,IAEtC,KAAK3D,EACD,MAAO,CAAE8D,SAAS,EAAOH,SAAUC,EAAOG,SAE9C,KAAK9D,EACD,MAAO,CAAE6D,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,ID1HfkB,KE/BuB,WAA6D,IAA5DlB,EAA2D,uDAAnD,CAAEmB,UAAW,GAAIC,gBAAiB,IAAMlB,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAK3D,EACD,IAAM6E,EAAOnB,EAAOG,QACdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAE/D,OAAIY,EACO,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAC5BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAI1C,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAI5C,KAAK5E,EACD,OAAO,2BACAuD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEd,UAAYR,EAAOG,aAGpE,KAAK3D,EACD,OAAO,2BACAsD,GADP,IAEIoB,gBAAiBlB,EAAOG,UAGhC,KAAK1D,EACD,OAAO,2BACAqD,GADP,IAEI2B,cAAezB,EAAOG,UAG9B,KAAKzD,EACD,OAAO,2BACAoD,GADP,IAEImB,UAAW,KAGnB,QACI,OAAOnB,IFbf4B,UGN4B,WAAyB,IAAxB5B,EAAuB,uDAAhB,GAAKE,EAAW,uCACpD,OAAOA,EAAOC,MACV,KAAKtD,EACD,MAAM,CAAEuD,SAAQ,GAEpB,KAAKtD,EACD,MAAM,CAAEsD,SAAQ,EAAOyB,SAAS3B,EAAOG,SAE3C,KAAKtD,EACA,MAAM,CAAEqD,SAAQ,EAAMI,MAAMN,EAAOG,SAExC,KAAKrD,EACD,MAAO,GAEV,QACI,OAAOgD,IHRhB8B,aGYgC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKlD,EACD,MAAO,CAAEmD,SAAS,GAEtB,KAAKlD,EACD,MAAO,CAAEkD,SAAS,EAAOyB,SAAU3B,EAAOG,SAE9C,KAAKlD,EACD,MAAO,CAAEiD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,EACD,MAAO,GAEX,QACI,OAAOgD,IH1Bf+B,YG+B8B,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK/C,EACD,OAAO,2BAAK4C,GAAZ,IAAmBI,SAAS,IAEhC,KAAK/C,EACD,MAAO,CAAE+C,SAAS,EAAO4B,KAAM9B,EAAOG,SAE1C,KAAK/C,EACD,MAAO,CAAE8C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9C,EACD,MAAO,CAAEyE,KAAM,IAGnB,QACI,OAAOhC,IH9CfiC,kBGmDoC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAK3C,EACD,MAAO,CAAE4C,SAAS,GAEtB,KAAK3C,EACD,MAAO,CAAE2C,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAE7D,KAAK3C,GACD,MAAO,CAAE0C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK1C,GACD,MAAO,GAEX,QACI,OAAOqC,IHjEfkC,SGsE2B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKvC,GACD,MAAO,CAAEwC,SAAS,GAEtB,KAAKvC,GACD,MAAO,CAAEuC,SAAS,EAAO+B,MAAOjC,EAAOG,SAE3C,KAAKvC,GACD,MAAO,CAAEsC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKtC,GACD,MAAO,CAAEoE,MAAO,IAEpB,QACI,OAAOnC,IHpFfoC,WGyF6B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKnC,GACD,MAAO,CAAEoC,SAAS,GAEtB,KAAKnC,GACD,MAAO,CAAEmC,SAAS,EAAOS,SAAS,GAEtC,KAAK3C,GACD,MAAO,CAAEkC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IHpGfqC,WGyG6B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKhC,GACD,MAAO,CAAEiC,SAAS,GAEtB,KAAKhC,GACD,MAAO,CAAEgC,SAAS,EAAOS,SAAS,GAEtC,KAAKxC,GACD,MAAO,CAAE+B,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK/B,GACD,MAAO,CAAE0D,KAAM,IAEnB,QACI,OAAOhC,IHtHfsC,YIpB8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAK5B,GACD,MAAO,CACH6B,SAAS,GAGjB,KAAK5B,GACD,MAAO,CACH4B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAGtB,KAAK5B,GACD,MAAO,CACH2B,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAK3B,GACD,MAAO,GAGX,QACI,OAAOsB,IJJfwC,aIS+B,WAA6E,IAA5ExC,EAA2E,uDAAnE,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAAMlB,EAAW,uCAC3G,OAAQA,EAAOC,MACX,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAGjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACTmC,MAAOrC,EAAOG,SAGtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAItB,QACI,OAAOL,IJ9Bf0C,SImC2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAGjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAGjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKpB,GACD,MAAO,GAEX,QACI,OAAOe,IJzDf2C,YI0F8B,WAAqC,IAApC3C,EAAmC,uDAA3B,CAAE4C,OAAQ,IAAM1C,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAGjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTwC,OAAQ1C,EAAOG,SAGvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKhB,GACD,MAAO,CACHuD,OAAQ,IAGhB,QACI,OAAO5C,IJlHf6C,UIwH4B,WAAqC,IAApC7C,EAAmC,uDAA3B,CAAE4C,OAAQ,IAAM1C,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CACHc,SAAS,GAGjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTwC,OAAQ1C,EAAOG,SAGvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJ1If8C,aI4D+B,WAAyB,IAAxB9C,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKV,GACD,MAAO,CACHW,SAAS,GAGjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAGjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKT,GACD,MAAO,GAEX,QACI,OAAOI,MJ/Eb+C,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAO7CI,GAAe,CACjBnC,KAAM,CACFC,UAAW4B,GACX3B,gBAP2B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAQtDrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAKLC,GAHDC,sBAAY5D,GAASwD,GAC/BK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,8GK9C5BM,OAjCf,WAAsB,IAAD,EACaC,mBAAS,IADtB,oBACVC,EADU,KACDC,EADC,KAGbC,EAAUC,eAUd,OACI,gBAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAR,oBAA0BR,EAA1B,YAEAE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,YAIhBC,QAAM,EAArC,UACI,eAACP,GAAA,EAAKQ,QAAN,CACIvE,KAAK,OACLwE,KAAK,IACLC,SAAU,SAACR,GAAD,OAAOL,EAAWK,EAAES,OAAOC,QACrCC,UAAU,oBAGd,eAACC,GAAA,EAAD,CACI7E,KAAK,SACL8E,QAAQ,kBACRF,UAAU,MAHd,wB,gDCmGCG,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLjF,KAAM/C,IAHoB,EAQ1BiI,IADaxD,EAPa,EAO1BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbZ,SAiBPC,KAAMC,IAAN,qBACLT,EADK,KAEnBI,GAnB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAKRT,EAAS,CACLjF,KAAM9C,EACNgD,QAASwF,IAxBiB,kDA6B9BT,EAAS,CACLjF,KAAM7C,EACN+C,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCc,0DAAR,yDChDfC,OAtEf,WAEI,IACQpE,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFuD,EAAWe,cAMjB,OACI,kCACI,eAACC,GAAA,EAAD,CAAQC,GAAG,OAAOpB,QAAQ,OAAOqB,OAAO,KAAKC,kBAAgB,EAA7D,SACI,gBAACC,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACL,GAAA,EAAOM,MAAR,6BAGJ,eAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,gBAACR,GAAA,EAAOS,SAAR,CAAiB1B,GAAG,mBAApB,UACI,eAAC,GAAD,IACA,gBAAC2B,GAAA,EAAD,CAAK/B,UAAU,UAAf,UAEI,eAAC,iBAAD,CAAe0B,GAAG,QAAlB,SACI,gBAACK,GAAA,EAAIC,KAAL,WAAW,oBAAGhC,UAAU,yBAAxB,eAGHlD,EACG,gBAACmF,GAAA,EAAD,CAAaC,MAAOpF,EAAS8C,KAAMQ,GAAG,WAAtC,UACI,eAAC,iBAAD,CAAesB,GAAG,WAAlB,SACI,eAACO,GAAA,EAAYE,KAAb,uBAGJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QA3B5B,WAClB/B,GD4DoB,SAACA,GACzBpC,aAAaoE,WAAW,YACxBhC,EAAS,CAAEjF,KAAMnD,IACjBoI,EAAS,CAAEjF,KAAM5C,IACjB6H,EAAS,CAAEjF,KAAMd,KACjB+F,EAAS,CAAEjF,KAAMpC,SCvCe,uBAIA,eAAC,iBAAD,CAAe0I,GAAG,SAAlB,SACI,gBAACK,GAAA,EAAIC,KAAL,WAAU,oBAAGhC,UAAU,gBAAvB,aAKXlD,GAAYA,EAASwF,SAClB,gBAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ9B,GAAG,aAA9B,UACI,eAAC,iBAAD,CAAesB,GAAG,kBAAlB,SACI,eAACO,GAAA,EAAYE,KAAb,yBAGJ,eAAC,iBAAD,CAAeT,GAAG,qBAAlB,SACI,eAACO,GAAA,EAAYE,KAAb,0BAGJ,eAAC,iBAAD,CAAeT,GAAG,mBAAlB,SACI,eAACO,GAAA,EAAYE,KAAb,yC,mBC/CzBI,I,UCyCAC,OAtDf,YAAuC,IAAtBzC,EAAqB,EAArBA,MAAO0C,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAC1B,OACI,uBAAK1C,UAAW,SAAhB,UACI,gCACI,oBAAG2C,MAAS,CAACD,SAAQ1C,UACjBD,GAAO,EACL,cACDA,GAAQ,GACH,uBACA,kBAGd,gCACI,oBAAG4C,MAAS,CAACD,SAAQ1C,UACjBD,GAAO,EACL,cACDA,GAAQ,IACH,uBACA,kBAGd,gCACI,oBAAG4C,MAAS,CAACD,SAAQ1C,UACjBD,GAAO,EACL,cACDA,GAAQ,IACH,uBACA,kBAGd,gCACI,oBAAG4C,MAAS,CAACD,SAAQ1C,UACjBD,GAAO,EACL,cACDA,GAAQ,IACH,uBACA,kBAGd,gCACI,oBAAG4C,MAAS,CAACD,SAAQ1C,UACjBD,GAAO,EACL,cACDA,GAAQ,IACH,uBACA,kBAId,gCAAO0C,GAAQA,QCjBZG,OA7Bf,YAA+B,IAAZjH,EAAW,EAAXA,QACf,OACI,gBAACkH,GAAA,EAAD,CAAM7C,UAAY,mBAAlB,UAEO,eAAC,QAAD,CAAM0B,GAAE,mBAAc/F,EAAQmH,KAA9B,SACI,eAACD,GAAA,EAAKE,IAAN,CAAWC,IAAMrH,EAAQsH,UAEhC,gBAACJ,GAAA,EAAKK,KAAN,WACI,eAAC,QAAD,CAAMxB,GAAE,mBAAgB/F,EAAQmH,KAAhC,SACI,eAACD,GAAA,EAAKM,MAAN,CAAYC,GAAK,MAAjB,SACM,wCAAUzH,EAAQiE,YAGxB,eAACiD,GAAA,EAAKQ,KAAN,UACA,sBAAKrD,UAAU,OAAf,SACI,eAAC,GAAD,CAAQD,MAAOpE,EAAQ2H,OAAQb,KAAI,UAAK9G,EAAQ4H,WAAb,YAAmCb,MAAO,gBAGjF,gBAACG,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cACMzH,EAAQ6H,gBCJnBC,OAjBf,WACI,OACI,0BACIC,UAAU,SACVC,KAAK,SACLhB,MAAQ,CACHiB,OAAO,QACPC,MAAO,QACPC,OAAO,OACPC,QAAS,SAPlB,SAUI,uBAAM/D,UAAU,UAAhB,4B,UCLGgE,OARf,YAAuC,IAArB9D,EAAoB,EAApBA,QAAS+D,EAAW,EAAXA,SACvB,OACI,eAACC,GAAA,EAAD,CAAOhE,QAAWA,EAAlB,SACM+D,K,UCsBCE,OAvBf,YAAmE,IAA/C3I,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,KAAuC,IAAjCwD,eAAiC,MAAvB,GAAuB,MAAnBuD,eAAmB,SAK9D,OAJIvD,IACAA,EAAUA,EAAQqF,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/C5I,EAAQ,GACZ,eAAC6I,GAAA,EAAD,UACK,YAAIC,MAAM9I,GAAO+I,QAAQ7H,KAAI,SAACD,GAAD,OAC1B,eAAC,iBAAD,CAEIiF,GAAKY,EAAD,sCAEiCvD,EAFjC,iBAEiDtC,EAAI,GAFrD,oBACasC,EADb,iBAC6BtC,EAAI,GAHzC,SAOI,eAAC4H,GAAA,EAAWlC,KAAZ,CAAiBqC,OAAQ/H,EAAI,IAAMlB,EAAnC,SAA0CkB,EAAI,KANzCA,EAAI,S,oBCqBhBgI,GAAe,eAAC1F,EAAD,uDAAW,GAAX,gDAAkB,WAAOsB,GAAP,kBAAAE,EAAA,sEAEtCF,EAAS,CAAEjF,KAAMnF,IAFqB,SAIf2K,KAAMC,IAAN,uBAA0B9B,IAJX,gBAI9B+B,EAJ8B,EAI9BA,KAERT,EAAS,CACLjF,KAAMlF,EACNoF,QAASwF,IARyB,gDAYtCT,EAAS,CACLjF,KAAMjF,EACNmF,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBsB,yDAAlB,uDA2CfyD,GAAqB,SAACtE,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElCF,EAAS,CAAEjF,KAAMhF,IAFiB,SAIXwK,KAAMC,IAAN,wBAA2BT,IAJhB,gBAI1BU,EAJ0B,EAI1BA,KAERT,EAAS,CACLjF,KAAM/E,EACNiF,QAASwF,IARqB,gDAYlCT,EAAS,CACLjF,KAAM9E,EACNgF,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBkB,yDAAR,uDCtCnB0D,OA/Bf,WACI,IAAMtE,EAAWe,cAEXlF,EAAkBiF,aAAY,SAAAlG,GAAK,OAAIA,EAAMiB,mBAC3CT,EAA6BS,EAA7BT,MAAOJ,EAAsBa,EAAtBb,QAASH,EAAagB,EAAbhB,SAMxB,OAJA0J,qBAAU,WACNvE,EDwCuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAEjF,KAAM9D,IAFY,SAINsJ,KAAMC,IAAN,sBAJM,gBAIrBC,EAJqB,EAIrBA,KAERT,EAAS,CACLjF,KAAM7D,EACN+D,QAASwF,IARgB,gDAY7BT,EAAS,CACLjF,KAAM5D,EACN8D,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBa,yDAAN,yDCvCxB,CAACZ,IAEIhF,EAAU,eAAC,GAAD,IACZI,EACI,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAEzB,eAACoJ,GAAA,EAAD,CAAUC,MAAM,QAAQ9E,UAAU,UAAlC,SACK9E,EAASwB,KAAI,SAAAf,GAAO,OACjB,eAACkJ,GAAA,EAAS1C,KAAV,UACI,gBAAC,QAAD,CAAMT,GAAE,mBAAc/F,EAAQmH,KAA9B,UACI,eAACiC,GAAA,EAAD,CAAO/B,IAAKrH,EAAQsH,MAAO+B,IAAKrJ,EAAQiE,KAAMqF,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkBlF,UAAU,mBAA5B,SACI,gCAAKrE,EAAQiE,KAAb,MAAsBjE,EAAQ6H,MAA9B,aAJQ7H,EAAQmH,WCsBrCqC,OAnCf,YAAkC,IAAZlG,EAAW,EAAXA,QACZoB,EAAWe,cACXpG,EAAcmG,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,eACvCS,EAA0CT,EAA1CS,MAAOJ,EAAmCL,EAAnCK,QAASH,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,MAEpCuD,EAAUE,EAAQO,SAAS4F,OAO/B,OALAR,qBAAU,WACNvE,EAASoE,GAAa1F,MAEvB,CAACsB,EAAUtB,IAGV,kCACMA,GAAW,eAAC,GAAD,IAEb,uDACC1D,EAAU,eAAC,GAAD,IACLI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAEjC,iCACI,eAAC4J,GAAA,EAAD,UACKnK,EAASwB,KAAI,SAAAf,GAAO,OACjB,eAAC2J,GAAA,EAAD,CAAuBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,eAAC,GAAD,CAAS/J,QAASA,KADZA,EAAQmH,UAK1B,eAAC,GAAD,CAAUvH,KAAMA,EAAMC,MAAOA,EAAOuD,QAASA,W,UC4LtD4G,OAzNf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAO3G,EAAW,EAAXA,QAAW,EACjBH,mBAAS,GADQ,oBAChC+G,EADgC,KAC3BC,EAD2B,OAEXhH,mBAAS,GAFE,oBAEhCwE,EAFgC,KAExByC,EAFwB,OAGTjH,mBAAS,IAHA,oBAGhCkH,EAHgC,KAGvBC,EAHuB,KAKjC5F,EAAWe,cAEX1F,EAAiByF,aAAY,SAAAlG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFb,EAAsBkF,aAAY,SAAAlG,GAAK,OAAIA,EAAMgB,uBAE1CiK,EAGTjK,EAHAZ,QACO8K,EAEPlK,EAFAR,MACS2K,EACTnK,EADAH,QA4BJ,OAzBA8I,qBAAU,WACFwB,IACAL,EAAU,GACVE,EAAW,IACX5F,EAAS,CAAEjF,KAAM/D,KAGrBgJ,EAASqE,GAAmBkB,EAAMS,OAAOjG,OAE1C,CAACC,EAAUuF,EAAOQ,IAiBjB,iCACI,eAAC,QAAD,CAAM1E,GAAG,IAAI1B,UAAU,qBAAvB,oBACC3E,EACG,eAAC,GAAD,IACEI,EACI,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAEzB,iCACI,gBAAC4J,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAO/B,IAAKrH,EAAQsH,MAAO+B,IAAKrJ,EAAQiE,KAAMqF,OAAK,MAIvD,eAACK,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACI,eAACoG,GAAA,EAAUnE,KAAX,UACI,8BAAKxG,EAAQiE,SAGjB,eAAC0G,GAAA,EAAUnE,KAAX,UACI,eAAC,GAAD,CAAQpC,MAAOpE,EAAQ2H,OAAQb,KAAI,UAAK9G,EAAQ4H,WAAb,YAAmCb,MAAO,cAGjF,gBAAC4D,GAAA,EAAUnE,KAAX,uBACcxG,EAAQ6H,SAGtB,gBAAC8C,GAAA,EAAUnE,KAAX,8BACkBxG,EAAQ4K,oBAMlC,eAACjB,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC3C,GAAA,EAAD,UACI,gBAACyD,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACI,eAACoG,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACI,wCAAU3J,EAAQ6H,gBAI9B,eAAC8C,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACK3J,EAAQ6K,aAAe,EAAI,WAAa,sBAKpD7K,EAAQ6K,aAAe,GACpB,eAACF,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,eAACA,GAAA,EAAD,CAAKmB,GAAG,OAAOzG,UAAU,OAAzB,SACI,eAACb,GAAA,EAAKQ,QAAN,CACIyD,GAAG,SACHrD,MAAO8F,EACPhG,SAAU,SAACR,GAAD,OAAOyG,EAAOzG,EAAES,OAAOC,QAHrC,SAOQ,YAAIuE,MAAM3I,EAAQ6K,cAAcjC,QAAQ7H,KAAI,SAACD,GAAD,OACxC,yBAAoBsD,MAAOtD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAa7C,eAAC6J,GAAA,EAAUnE,KAAX,UACI,eAAClC,GAAA,EAAD,CACImC,QAlGvB,WACrBnD,EAAQM,KAAR,gBAAsBqG,EAAMS,OAAOjG,GAAnC,gBAA6CyF,KAkGD7F,UAAU,YACV0G,SAAkC,GAAxB/K,EAAQ6K,aAClBpL,KAAK,SAJT,4CAapB,eAACiK,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,0CAC4B,IAA3B7J,EAAQC,QAAQ+K,QAAgB,eAAC,GAAD,CAASzG,QAAQ,OAAjB,yBAEjC,gBAACoG,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACKvE,EAAQC,QAAQc,KAAI,SAACkK,GAAD,OACjB,gBAACN,GAAA,EAAUnE,KAAX,WACI,kCAASyE,EAAOhH,OAChB,eAAC,GAAD,CAAQG,MAAO6G,EAAOtD,OAAQZ,MAAM,YACpC,6BAAIkE,EAAOC,UAAUC,UAAU,EAAG,MAClC,6BAAIF,EAAOZ,YAJMY,EAAO9D,QAQhC,gBAACwD,GAAA,EAAUnE,KAAX,WACI,wDAEC+D,GAAwB,eAAC,GAAD,IACxBE,GAAwB,eAAC,GAAD,CAASlG,QAAQ,UAAjB,4BACxBiG,GAAsB,eAAC,GAAD,CAASjG,QAAQ,SAAjB,SAA2BiG,IAEjDrJ,EACG,gBAACqC,GAAA,EAAD,CAAMC,SAjI5B,SAACC,GHkLQ,IAAC0H,EAAWH,EGjLvCvH,EAAEC,iBACFe,GHgL4B0G,EG/KxBnB,EAAMS,OAAOjG,GH+KsBwG,EG/KlB,CACjBtD,SACA0C,WH6KuB,yCAAuB,WAAO3F,EAAUC,GAAjB,wBAAAC,EAAA,sEAElDF,EAAS,CACLjF,KAAMlE,IAHwC,EAQ9CoJ,IADaxD,EAPiC,EAO9CD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbQ,SAiB3BC,KAAMoG,KAAN,wBACFD,EADE,aAEnBH,EACApG,GApB8C,gBAiB1CM,EAjB0C,EAiB1CA,KAKRT,EAAS,CACLjF,KAAMjE,EACNmE,QAASwF,IAxBqC,kDA8BlDT,EAAS,CACLjF,KAAMhE,EACNkE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCkC,0DAAvB,2DGjDa,UACI,gBAAC9B,GAAA,EAAK8H,MAAN,CAAYC,UAAU,SAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,gBAAChI,GAAA,EAAKQ,QAAN,CACIyD,GAAG,SACHrD,MAAOuD,EACPzD,SAAU,SAACR,GAAD,OAAO0G,EAAU1G,EAAES,OAAOC,QAHxC,UAKI,yBAAQA,MAAM,GAAd,2BACA,yBAAQA,MAAM,IAAd,0BACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,uBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAIR,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIyD,GAAG,WACHgE,IAAI,IACJrH,MAAOiG,EACPnG,SAAU,SAACR,GAAD,OAAO4G,EAAW5G,EAAES,OAAOC,aAI7C,eAACE,GAAA,EAAD,CACIyG,SAAUR,EACV9K,KAAK,SACL8E,QAAQ,UAHZ,uBAUA,gBAAC,GAAD,CAASA,QAAQ,OAAjB,uBAAkC,eAAC,QAAD,CAAMwB,GAAG,SAAT,8BAAlC,qDC5MvC2F,GAAY,SAACjH,EAAGyF,GAAJ,gDAAW,WAAMxF,EAASC,GAAf,kBAAAC,EAAA,sEACVK,KAAMC,IAAN,wBAA2BT,IADjB,gBACxBU,EADwB,EACxBA,KAERT,EAAS,CACLjF,KAAK3D,EACL6D,QAAQ,CACJK,QAAQmF,EAAKgC,IACblD,KAAKkB,EAAKlB,KACVqD,MAAMnC,EAAKmC,MACXO,MAAM1C,EAAK0C,MACXgD,aAAa1F,EAAK0F,aAClBX,SAGR5H,aAAaqJ,QAAQ,YAAanJ,KAAKoJ,UAAUjH,IAAWnE,KAAKC,YAdjC,2CAAX,yDC4GVoL,OA5Gf,YAAmD,IAA7B5B,EAA4B,EAA5BA,MAAOpG,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7B8H,EAAYnB,EAAMS,OAAOjG,GACzByF,EAAMrG,EAAS4F,OAASqC,OAAOjI,EAAS4F,OAAOhB,MAAM,KAAK,IAAM,EAChE/D,EAAWe,cAGThF,EADK+E,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAChCC,UAERwI,qBAAU,WACFmC,GACA1G,EAASgH,GAAUN,EAAWlB,MAEnC,CAACxF,EAAU0G,EAAWlB,IAGzB,IAAM6B,EAAwB,SAACtH,GAC3BC,EDKsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAU,CACNjF,KAAM1D,EACN4D,QAAQ8E,IAGZnC,aAAaqJ,QAAQ,YAAanJ,KAAKoJ,UAAUjH,IAAWnE,KAAKC,aCXpDuL,CAAevH,KAO5B,OACI,gBAACiF,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,0CACsB,IAArBpJ,EAAUuK,OACP,gBAAC,GAAD,CAASzG,QAAQ,OAAjB,sCAC0B,eAAC,QAAD,CAAMwB,GAAG,IAAT,gCAGtB,eAAC4E,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,SACK9D,EAAUM,KAAI,SAAAJ,GAAI,OACf,eAACgK,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAO/B,IAAK1G,EAAK2G,MAAO+B,IAAK1I,EAAKsD,KAAMqF,OAAK,EAAC2C,SAAO,MAEzD,eAACtC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC,QAAD,CAAM9D,GAAE,mBAAcpF,EAAKX,SAA3B,SAAuCW,EAAKsD,SAGhD,gBAAC0F,GAAA,EAAD,CAAKE,GAAI,EAAT,cACMlJ,EAAKkH,SAGX,eAAC8B,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACrG,GAAA,EAAKQ,QAAN,CACIyD,GAAG,SACHrD,MAAOzD,EAAKuJ,IACZhG,SAAU,SAACR,GAAD,OAAOgB,EAASgH,GAAU/K,EAAKX,QAAS8L,OAAOpI,EAAES,OAAOC,UAHtE,SAOQ,YAAIuE,MAAMhI,EAAKkK,cAAcjC,QAAQ7H,KAAI,SAACD,GAAD,OACrC,yBAAoBsD,MAAOtD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UASjC,eAAC6I,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACvF,GAAA,EAAD,CACI7E,KAAK,SACL8E,QAAQ,QACRkC,QAAS,kBAAMsF,EAAsBpL,EAAKX,UAH9C,SAKI,oBAAGqE,UAAU,yBArCR1D,EAAKX,iBA+C9C,eAAC2J,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,gBAAC3C,GAAA,EAAD,WACI,eAACyD,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,SACI,gBAACoG,GAAA,EAAUnE,KAAX,WACI,6CAAe/F,EAAUyL,QAAO,SAACC,EAAKxL,GAAN,OAAewL,EAAMxL,EAAKuJ,MAAK,GAA/D,aADJ,IAEMzJ,EAAUyL,QAAO,SAACC,EAAKxL,GAAN,OAAewL,EAAMxL,EAAKuJ,IAAMvJ,EAAKkH,QAAO,GAAGuE,QAAQ,QAIlF,eAACzB,GAAA,EAAUnE,KAAX,UACI,eAAClC,GAAA,EAAD,CACI7E,KAAK,SACL4E,UAAU,YACV0G,SAA+B,IAArBtK,EAAUuK,OACpBvE,QA5EA,WACpBnD,EAAQM,KAAK,6BAuEG,iCClFTyI,OAZf,YAAsC,IAAb/D,EAAY,EAAZA,SACrB,OACI,eAACxC,GAAA,EAAD,UACI,eAAC4D,GAAA,EAAD,CAAKrF,UAAU,4BAAf,SACI,eAACsF,GAAA,EAAD,CAAKmB,GAAI,GAAIjB,GAAI,EAAjB,SACKvB,SCsENgE,OAtEf,YAA6C,IAAtBzI,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAAW,EACdH,mBAAS,IADK,oBACjCoJ,EADiC,KAC1BC,EAD0B,OAERrJ,mBAAS,IAFD,oBAEjCsJ,EAFiC,KAEvBC,EAFuB,KAIlChI,EAAWe,cAEXkH,EAAW9I,EAAS4F,OAAS5F,EAAS4F,OAAOhB,MAAM,KAAK,GAAK,IAE7DvH,EAAYsE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCpB,EAA6BoB,EAA7BpB,MAAOJ,EAAsBwB,EAAtBxB,QAASyB,EAAaD,EAAbC,SAaxB,OAXA8H,qBAAU,WACF9H,GACAmC,EAAQM,KAAK+I,KAElB,CAACrJ,EAASnC,EAAUwL,IAQnB,gBAAC,GAAD,WACI,oDACC7M,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC8D,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFe,EfWa,SAAC6H,EAAOE,GAAR,gDAAqB,WAAO/H,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACLjF,KAAMtD,IAGJ0I,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAMoG,KACzB,oBACA,CAAE,SAAYkB,EAAO,SAAYE,GACjC5H,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRT,EAAS,CACLjF,KAAMrD,EACNuD,QAASwF,IAGb7C,aAAaqJ,QAAQ,WAAYnJ,KAAKoJ,UAAUzG,IAvBd,kDA0BlCT,EAAS,CACLjF,KAAMpD,EACNsD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA9BkB,0DAArB,sDeXJsH,CAAML,EAAOE,KAQlB,UAEI,gBAACjJ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,oBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIvE,KAAK,QACLoN,YAAY,mBACZzI,MAAOmI,EACPrI,SAAU,SAACR,GAAD,OAAO8I,EAAS9I,EAAES,OAAOC,aAM3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACIvE,KAAK,WACLoN,YAAY,2BACZzI,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAYhJ,EAAES,OAAOC,aAK9C,eAACE,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,yBAKJ,eAACmF,GAAA,EAAD,CAAKrF,UAAU,OAAf,SACI,gBAACsF,GAAA,EAAD,mCACyB,eAAC,QAAD,CACjB5D,GAAI4G,EAAQ,6BAAyBA,GAAa,YADjC,wCCgD1BG,OA1Gf,YAAgD,IAAtBjJ,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAAW,EAEnBH,mBAAS,IAFU,oBAEpCc,EAFoC,KAE9B8I,EAF8B,OAGjB5J,mBAAS,IAHQ,oBAGpCoJ,EAHoC,KAG7BC,EAH6B,OAIXrJ,mBAAS,IAJE,oBAIpCsJ,EAJoC,KAI1BC,EAJ0B,OAKGvJ,mBAAS,IALZ,oBAKpC6J,EALoC,KAKnBC,EALmB,OAMb9J,mBAAS,IANI,oBAMpCmC,EANoC,KAM3B4H,EAN2B,KAQrCxI,EAAWe,cAEXkH,EAAW9I,EAAS4F,OAAS5F,EAAS4F,OAAOhB,MAAM,KAAK,GAAK,IAE7DrH,EAAeoE,aAAY,SAAAlG,GAAK,OAAIA,EAAM8B,gBACxCtB,EAA6BsB,EAA7BtB,MAAOJ,EAAsB0B,EAAtB1B,QAASyB,EAAaC,EAAbD,SAmBxB,OAjBA8H,qBAAU,WACF9H,GACAmC,EAAQM,KAAK+I,KAElB,CAACrJ,EAASnC,EAAUwL,IAcnB,gBAAC,GAAD,WACI,6CACCrH,GAAW,eAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtCxF,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC8D,GAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBAEE8I,GAAYO,EACZE,EAAW,mCAEXxI,EhB+CY,SAACT,EAAMsI,EAAOE,GAAd,gDAA2B,WAAO/H,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACLjF,KAAMlD,IAGJsI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAMoG,KACzB,uBACA,CAAE,KAAQpH,EAAM,MAASsI,EAAO,SAAYE,GAC5C5H,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRT,EAAS,CACLjF,KAAMjD,EACNmD,QAASwF,IAGbT,EAAS,CACLjF,KAAMrD,EACNuD,QAASwF,IAGb7C,aAAaqJ,QAAQ,WAAYnJ,KAAKoJ,UAAUzG,IA5BL,kDA+B3CT,EAAS,CACLjF,KAAMhD,EACNkD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAnC2B,0DAA3B,sDgB/CH6H,CAASlJ,EAAMsI,EAAOE,KAW/B,UAEI,gBAACjJ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIoJ,UAAQ,EACR3N,KAAK,OACLoN,YAAY,oBACZzI,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,oBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIoJ,UAAQ,EACR3N,KAAK,QACLoN,YAAY,mBACZzI,MAAOmI,EACPrI,SAAU,SAACR,GAAD,OAAO8I,EAAS9I,EAAES,OAAOC,aAK3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACIoJ,UAAQ,EACR3N,KAAK,WACLoN,YAAY,wBACZzI,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAYhJ,EAAES,OAAOC,aAK9C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qCACA,eAAChI,GAAA,EAAKQ,QAAN,CACIoJ,UAAQ,EACR3N,KAAK,WACLoN,YAAY,yBACZzI,MAAO4I,EACP9I,SAAU,SAACR,GAAD,OAAOuJ,EAAmBvJ,EAAES,OAAOC,aAKrD,eAACE,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,2BAMJ,eAACmF,GAAA,EAAD,CAAKrF,UAAU,OAAf,SACI,gBAACsF,GAAA,EAAD,mCACyB,eAAC,QAAD,CACjB5D,GAAI4G,EAAQ,0BAAsBA,GAAa,SAD9B,sC,UCsI5BU,GAAa,2DAAM,WAAO3I,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACLjF,KAAMb,KAHc,EAQpB+F,IADaxD,EAPO,EAOpBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAblB,SAiBDC,KAAMC,IAAN,eAEnBL,GAnBoB,gBAiBhBM,EAjBgB,EAiBhBA,KAKRT,EAAS,CACLjF,KAAMZ,GACNc,QAASwF,IAxBW,kDA6BxBT,EAAS,CACLjF,KAAMX,GACNa,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCQ,0DAAN,yDCnEXgI,OAlKf,YAAqC,IAAZhK,EAAW,EAAXA,QAAW,EAERH,mBAAS,IAFD,oBAEzBc,EAFyB,KAEnB8I,EAFmB,OAGN5J,mBAAS,IAHH,oBAGzBoJ,EAHyB,KAGlBC,EAHkB,OAIArJ,mBAAS,IAJT,oBAIzBsJ,EAJyB,KAIfC,EAJe,OAKcvJ,mBAAS,IALvB,oBAKzB6J,EALyB,KAKRC,EALQ,OAMF9J,mBAAS,IANP,oBAMzBmC,EANyB,KAMhB4H,EANgB,KAQ1BxI,EAAWe,cAEXpE,EAAcmE,aAAY,SAAAlG,GAAK,OAAIA,EAAM+B,eACvCvB,EAAyBuB,EAAzBvB,MAAOJ,EAAkB2B,EAAlB3B,QAAS4B,EAASD,EAATC,KAGhBH,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAGAhB,EADkBqF,aAAY,SAAAlG,GAAK,OAAIA,EAAMiC,qBAC7CpB,QAEF8B,EAAcuD,aAAY,SAAAlG,GAAK,OAAIA,EAAM2C,eAC9BsL,EAA8CtL,EAAvDvC,QAA+B8N,EAAwBvL,EAA/BnC,MAAoBoC,EAAWD,EAAXC,OAkCpD,OA/BA+G,qBAAU,WACD9H,EAGIG,GAASA,EAAK2C,OAAQ9D,GAAWgB,EAASgG,MAAQ7F,EAAK6F,KAKxD4F,EAAQzL,EAAK2C,MACbuI,EAASlL,EAAKiL,SALd7H,EAAS,CAAEjF,KAAMxC,KACjByH,EAASF,GAAe,YACxBE,EDgKY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLjF,KAAMjB,KAHgB,EAQtBmG,IADaxD,EAPS,EAOtBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbhB,SAiBHC,KAAMC,IAAN,wBAEnBL,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLjF,KAAMhB,GACNkB,QAASwF,IAxBa,kDA6B1BT,EAAS,CACLjF,KAAMf,GACNiB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAN,0DCrKhBhC,EAAQM,KAAK,YAWlB,CAACc,EAAUpB,EAASnC,EAAUG,EAAMnB,IAmBnC,gBAACuJ,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,4CAECvE,GAAW,eAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtCxF,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC8D,GAAA,EAAD,CAAMC,SAxBI,SAACC,GACnBA,EAAEC,iBAEE8I,GAAYO,EACZE,EAAW,oCAEXxI,ElB6GqB,SAACpD,GAAD,gDAAU,WAAOoD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLjF,KAAM3C,IAHyB,EAQ/B6H,IADaxD,EAPkB,EAO/BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbP,SAiBZC,KAAMwI,IAAN,6BAEnBnM,EACAuD,GApB+B,gBAiB3BM,EAjB2B,EAiB3BA,KAMRT,EAAS,CACLjF,KAAM1C,EACN4C,QAASwF,IAGbT,EAAS,CACLjF,KAAMrD,EACNuD,QAASwF,IAGb7C,aAAaqJ,QAAQ,WAAYnJ,KAAKoJ,UAAUzG,IAjCb,kDAoCnCT,EAAS,CACLjF,KAAMzC,GACN2C,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAxCmB,0DAAV,wDkB7GZoI,CAAkB,CACvB,GAAMpM,EAAK6F,IACX,KAAQlD,EACR,MAASsI,EACT,SAAYE,KAEhBS,EAAW,MAYP,UAEI,gBAAC1J,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIoJ,UAAQ,EACR3N,KAAK,OACLoN,YAAY,GACZzI,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,oBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIoJ,UAAQ,EACR3N,KAAK,QACLoN,YAAY,GACZzI,MAAOmI,EACPrI,SAAU,SAACR,GAAD,OAAO8I,EAAS9I,EAAES,OAAOC,aAK3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,WACLoN,YAAY,GACZzI,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAYhJ,EAAES,OAAOC,aAK9C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qCACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,WACLoN,YAAY,GACZzI,MAAO4I,EACP9I,SAAU,SAACR,GAAD,OAAOuJ,EAAmBvJ,EAAES,OAAOC,aAKrD,eAACE,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,0BAOR,gBAACoF,GAAA,EAAD,CAAKE,GAAI,EAAT,UACI,iDACC0D,EACG,eAAC,GAAD,IACAC,EACA,eAAC,GAAD,CAASjJ,QAAQ,SAAjB,SAA2BiJ,IAEnB,gBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACxJ,UAAU,WAApC,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,2CACA,6BAIR,iCACKnC,EAAOnB,KAAI,SAAAc,GAAK,OACb,gCACI,8BAAKA,EAAMsF,MACX,8BAAKtF,EAAMqJ,UAAUC,UAAU,EAAG,MAClC,oCAAMtJ,EAAMiM,cACZ,8BAAKjM,EAAMkM,OAASlM,EAAMmM,OAAO7C,UAAU,EAAG,IAC1C,oBAAG9G,UAAU,eAAe2C,MAAO,CAAED,MAAO,WAEhD,8BACI,eAAC,iBAAD,CAAehB,GAAE,iBAAYlE,EAAMsF,KAAnC,SACI,eAAC7C,GAAA,EAAD,CAAQD,UAAU,SAAlB,2BATHxC,EAAMsF,oBCpGxC8G,OA/Cf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAE1C,OACI,gBAACjI,GAAA,EAAD,CAAK/B,UAAU,8BAAf,UACI,eAAC+B,GAAA,EAAII,KAAL,UACK0H,EACG,eAAC,iBAAD,CAAenI,GAAG,SAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,sBAGA,eAACD,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,qBAIZ,eAAC3E,GAAA,EAAII,KAAL,UACK2H,EACG,eAAC,iBAAD,CAAepI,GAAG,YAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,yBAGA,eAACD,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,wBAIZ,eAAC3E,GAAA,EAAII,KAAL,UACK4H,EACG,eAAC,iBAAD,CAAerI,GAAG,WAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,qBAGA,eAACD,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,oBAIZ,eAAC3E,GAAA,EAAII,KAAL,UACK6H,EACG,eAAC,iBAAD,CAAetI,GAAG,cAAlB,SACI,eAACK,GAAA,EAAIC,KAAL,4BAGA,eAACD,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,+BC0CTuD,OA7Ef,YAAoC,IAAXhL,EAAU,EAAVA,QAEb5C,EADK8E,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAChCE,gBACFgE,EAAWe,cAHc,EAODtC,mBAASzC,EAAgB6N,SAPxB,oBAOxBA,EAPwB,KAOfC,EAPe,OAQPrL,mBAASzC,EAAgB+N,MARlB,oBAQxBA,EARwB,KAQlBC,EARkB,OASKvL,mBAASzC,EAAgBiO,YAT9B,oBASxBA,EATwB,KASZC,EATY,OAUDzL,mBAASzC,EAAgBmO,SAVxB,oBAUxBA,EAVwB,KAUfC,EAVe,KAkB/B,OACG,gBAAC,GAAD,WACQ,eAAC,GAAD,CAAeZ,OAAK,EAACC,OAAK,IAC9B,2CACA,gBAAC3K,GAAA,EAAD,CAAMC,SAVS,SAACC,GRoBQ,IAACyB,EQnBxBzB,EAAEC,iBACFe,GRkBwBS,EQlBK,CAAEoJ,UAASE,OAAME,aAAYE,WRkBzB,SAACnK,GAC1CA,EAAU,CACNjF,KAAMzD,EACN2D,QAAQwF,IAGZ7C,aAAaqJ,QAAQ,kBAAmBnJ,KAAKoJ,UAAUzG,OQvBhD7B,EAAQM,KAAK,aAOb,UACI,gBAACJ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,UACK,eAAC/H,GAAA,EAAKgI,MAAN,2BACA,eAAChI,GAAA,EAAKQ,QAAN,CACQoJ,UAAQ,EACR3N,KAAK,OACLoN,YAAY,GACZzI,MAAOmK,GAAoB,GAC3BrK,SAAU,SAACR,GAAD,OAAO8K,EAAW9K,EAAES,OAAOC,aAIlD,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACK,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CACQoJ,UAAQ,EACR3N,KAAK,OACLoN,YAAY,GACZzI,MAAOqK,GAAc,GACrBvK,SAAU,SAACR,GAAD,OAAOgL,EAAQhL,EAAES,OAAOC,aAI/C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,aAAtB,UACK,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACQoJ,UAAQ,EACR3N,KAAK,OACLoN,YAAY,GACZzI,MAAOuK,GAAyB,GAChCzK,SAAU,SAACR,GAAD,OAAOkL,EAAclL,EAAES,OAAOC,aAIrD,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,UACK,eAAC/H,GAAA,EAAKgI,MAAN,wBACA,eAAChI,GAAA,EAAKQ,QAAN,CACQoJ,UAAQ,EACR3N,KAAK,OACLoN,YAAY,GACZzI,MAAOyK,GAAoB,GAC3B3K,SAAU,SAACR,GAAD,OAAOoL,EAAWpL,EAAES,OAAOC,aAGlD,eAACE,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,8BCpBAwK,OAhDf,YAAqC,IAAZzL,EAAW,EAAXA,QAGb5C,EADK8E,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAChCE,gBAEFgE,EAAWe,cALe,EAOUtC,mBAAS,UAPnB,oBAOzBlC,EAPyB,KAOV+N,EAPU,KAmBhC,OAVKtO,EAAgB6N,SACjBjL,EAAQM,KAAK,aAUb,gBAAC,GAAD,WACI,eAAC,GAAD,CAAesK,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,gBAAC5K,GAAA,EAAD,CAAMC,SAVQ,SAACC,GTgCM,IAACyB,ES/B1BzB,EAAEC,iBACFe,GT8B0BS,ES9BClE,ET8BQ,SAACyD,GACxCA,EAAS,CACLjF,KAAMxD,EACN0D,QAASwF,IAGb7C,aAAaqJ,QAAQ,gBAAiBnJ,KAAKoJ,UAAUzG,OSnCjD7B,EAAQM,KAAK,gBAOT,UACI,gBAACJ,GAAA,EAAK8H,MAAN,WACI,eAAC9H,GAAA,EAAKgI,MAAN,CAAY/D,GAAG,SAAf,0CACA,eAACkC,GAAA,EAAD,UACI,eAACnG,GAAA,EAAKyL,MAAN,CACIxP,KAAK,QACLyP,MAAM,wBACNzK,GAAG,SACHR,KAAK,gBACLkL,SAAO,EACPjL,SAAU,SAACR,GAAD,OAAOsL,EAAiBtL,EAAES,OAAOC,eAOvD,eAACE,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,6BCsHD6K,OA5Jf,YAAwC,IAAZ9L,EAAW,EAAXA,QAElB1B,EAAc4D,aAAY,SAAAlG,GAAK,OAAIA,EAAMsC,eACvCC,EAA0BD,EAA1BC,MAAO/B,EAAmB8B,EAAnB9B,MAAOK,EAAYyB,EAAZzB,QAEhBuE,EAAWe,cAEXjF,EAAOgF,aAAY,SAAAlG,GAAK,OAAIA,EAAMkB,QAgCxC,OA9BAA,EAAK6O,WAAa7O,EAAKC,UAAUyL,QAAO,SAACC,EAAKxL,GAAN,OAAewL,EAAMxL,EAAKkH,MAAQlH,EAAKuJ,MAAK,GAAGkC,QAAQ,GAC/F5L,EAAK8O,eAAiB9O,EAAK6O,WAAa,IAAM,EAAI,IAAIjD,QAAQ,GAC9D5L,EAAK+O,SAAWzD,OAAQ,KAAStL,EAAK6O,YAAYjD,QAAQ,GAE1D5L,EAAKsN,YAAchC,OAAOtL,EAAK6O,YAAcvD,OAAOtL,EAAK8O,eAAiBxD,OAAOtL,EAAK+O,WAAWnD,QAAQ,GAGpG5L,EAAKS,eACNqC,EAAQM,KAAK,YAGjBqF,qBAAU,WACF9I,IACAmD,EAAQM,KAAR,iBAAuB/B,EAAMsF,MAC7BzC,EAAS,CAAEjF,KAAMzB,QAEtB,CAACmC,EAASmD,IAeT,iCACI,eAAC,GAAD,CAAe4K,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAAC3E,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACI,gBAACoG,GAAA,EAAUnE,KAAX,WACI,wCAEA,+BACI,0DACChG,EAAKE,gBAAgB6N,QAF1B,MAEsC/N,EAAKE,gBAAgB+N,KACtD,KACAjO,EAAKE,gBAAgBiO,WAJ1B,IAKK,KACAnO,EAAKE,gBAAgBmO,cAI9B,gBAAClE,GAAA,EAAUnE,KAAX,WACI,oDACA,+BACI,kDACChG,EAAKS,oBAId,gBAAC0J,GAAA,EAAUnE,KAAX,WACI,2CAC2B,IAA1BhG,EAAKC,UAAUuK,OAAe,eAAC,GAAD,CAASzG,QAAQ,OAAjB,yCAGvB,eAACoG,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,SACK/D,EAAKC,UAAUM,KAAI,SAACJ,EAAM6O,GAAP,OAChB,eAAC7E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAO/B,IAAK1G,EAAK2G,MAAO+B,IAAK1I,EAAKsD,KAAMqF,OAAK,EAAC2C,SAAO,MAGzD,eAACtC,GAAA,EAAD,UACI,eAAC,QAAD,CAAM5D,GAAE,mBAAcpF,EAAKX,SAA3B,SAAuCW,EAAKsD,SAGhD,gBAAC0F,GAAA,EAAD,CAAKE,GAAI,EAAT,UACKlJ,EAAKuJ,IADV,OACmBvJ,EAAKkH,MADxB,QACoClH,EAAKuJ,IAAMvJ,EAAKkH,OAAOuE,QAAQ,UAXtDoD,gBAwBjD,eAAC7F,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAAC3C,GAAA,EAAD,UACI,gBAACyD,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACI,eAACoG,GAAA,EAAUnE,KAAX,UACI,0CAGJ,eAACmE,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,yBACA,gBAACA,GAAA,EAAD,eAAOnJ,EAAK6O,mBAIpB,eAAC1E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,eAAOnJ,EAAK8O,sBAIpB,eAAC3E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,2BACA,gBAACA,GAAA,EAAD,eAAOnJ,EAAK+O,iBAIpB,eAAC5E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAOnJ,EAAKsN,mBAKpB,eAACnD,GAAA,EAAUnE,KAAX,UACK1G,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,MAGzC,eAAC6K,GAAA,EAAUnE,KAAX,UACI,eAAClC,GAAA,EAAD,CACI7E,KAAK,SACL4E,UAAU,YACV0G,SAA6B,IAAnBvK,EAAKC,UACfgG,QAnHb,WACf/B,ELJmB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLjF,KAAM5B,KAHoB,EAQ1B8G,IADaxD,EAPa,EAO1BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbZ,SAiBPC,KAAMoG,KAAN,mBAEnBxJ,EACAgD,GApB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAMRT,EAAS,CACLjF,KAAM3B,GACN6B,QAASwF,IAGbT,EAAS,CACLjF,KAAMvD,EACNyD,QAASwF,IAGb7C,aAAaoE,WAAW,aAjCM,kDAqC9BhC,EAAS,CACLjF,KAAM1B,GACN4B,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAzCc,0DAAX,wDKIVmK,CAAY,CACjB1N,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBoO,WAAY7O,EAAK6O,WACjBC,cAAe9O,EAAK8O,cACpBC,SAAU/O,EAAK+O,SACfzB,WAAYtN,EAAKsN,eAuGG,+C,SCyEjB4B,OAlNf,YAA0C,IAAnBzF,EAAkB,EAAlBA,MAAO3G,EAAW,EAAXA,QACpBqM,EAAU1F,EAAMS,OAAOjG,GACvBC,EAAWe,cAFoB,EAKLtC,oBAAS,GALJ,oBAK9ByM,EAL8B,KAKpBC,EALoB,KAO/B/N,EAAe0D,aAAY,SAAAlG,GAAK,OAAIA,EAAMwC,gBACxCD,EAA0BC,EAA1BD,MAAO/B,EAAmBgC,EAAnBhC,MAAOJ,EAAYoC,EAAZpC,QAEhBsC,EAAWwD,aAAY,SAAAlG,GAAK,OAAIA,EAAM0C,YAC3B8N,EAAoC9N,EAA7CtC,QAA8BqQ,EAAe/N,EAAxB7B,QAEvBiC,EAAeoD,aAAY,SAAAlG,GAAK,OAAIA,EAAM8C,gBAC/B4N,EAA4C5N,EAArD1C,QAAkCuQ,EAAmB7N,EAA5BjC,QAGzBgB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAgDR,OA7CKzB,GAAYI,IACb+B,EAAMwN,WAAaxN,EAAME,WAAWmK,QAAO,SAACC,EAAKxL,GAAN,OAAewL,EAAMxL,EAAKkH,MAAQlH,EAAKuJ,MAAK,GAAGkC,QAAQ,IAetGnD,qBAAU,WNkCiB,IAACxE,EMhCnBtD,GACDmC,EAAQM,KAAK,WAGZ/B,GAASkO,GAAclO,EAAMsF,MAAQ2E,OAAO6D,IAAYM,GACzDvL,EAAS,CAAEjF,KAAMlB,KACjBmG,EAAS,CAAEjF,KAAMP,KAEjBwF,GNwBoBD,EMxBKkL,ENwBN,yCAAQ,WAAOjL,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLjF,KAAMxB,KAHqB,EAQ3B0G,IADaxD,EAPc,EAO3BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbX,SAiBRC,KAAMC,IAAN,sBACJT,EADI,KAEnBI,GAnB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAKRT,EAAS,CACLjF,KAAMvB,GACNyB,QAASwF,IAxBkB,kDA6B/BT,EAAS,CACLjF,KAAMtB,GACNwB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCe,0DAAR,2DMvBXzD,EAAMkM,SACTmC,OAAOC,OAGRN,GAAY,GA1BA,WACpB,IAAMO,EAASC,SAASC,cAAc,UACtCF,EAAO3Q,KAAO,kBACd2Q,EAAO/I,IAAM,2HACb+I,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GAgBlBO,MAKT,CAACjM,EAAU7C,EAAO8N,EAASI,EAAYE,IAWnCvQ,EACH,eAAC,GAAD,IACAI,EACA,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAEnB,iCACI,0CAAY+B,EAAM+O,MAClB,gBAAClH,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACI,gBAACoG,GAAA,EAAUnE,KAAX,WACI,qDACA,+BAAG,+CAAH,IAA8B3E,EAAMP,KAAK2C,QACzC,+BAAG,8CAAwB,oBAAG4M,KAAI,iBAAYhP,EAAMP,KAAKiL,OAA9B,SAAwC1K,EAAMP,KAAKiL,WAC9E,+BACI,iDACC1K,EAAMnB,gBAAgB6N,QAF3B,MAEuC1M,EAAMnB,gBAAgB+N,KACxD,KACA5M,EAAMnB,gBAAgBiO,WAJ3B,IAKH,KACQ9M,EAAMnB,gBAAgBmO,WAG1BhN,EAAMiP,YACH,gBAAC,GAAD,CAASvM,QAAQ,UAAjB,qBAAoC1C,EAAMkP,eAEtC,eAAC,GAAD,CAASxM,QAAQ,UAAjB,2BAIZ,gBAACoG,GAAA,EAAUnE,KAAX,WACI,oDACA,+BACI,kDACC3E,EAAMZ,iBAEVY,EAAMkM,OACH,gBAAC,GAAD,CAASxJ,QAAQ,UAAjB,oBAAmC1C,EAAMmM,UAErC,eAAC,GAAD,CAASzJ,QAAQ,UAAjB,wBAKZ,gBAACoG,GAAA,EAAUnE,KAAX,WACI,wBAC6B,IAA5B3E,EAAME,WAAWiJ,OAAe,eAAC,GAAD,CAASzG,QAAQ,OAAjB,uCAGzB,eAACoG,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,SACK1C,EAAME,WAAWhB,KAAI,SAACJ,EAAM6O,GAAP,OAClB,eAAC7E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAO/B,IAAK1G,EAAK2G,MAAO+B,IAAK1I,EAAKsD,KAAMqF,OAAK,EAAC2C,SAAO,MAGzD,eAACtC,GAAA,EAAD,UACI,eAAC,QAAD,CAAM5D,GAAE,mBAAcpF,EAAKX,SAA3B,SAAuCW,EAAKsD,SAGhD,gBAAC0F,GAAA,EAAD,CAAKE,GAAI,EAAT,UACKlJ,EAAKuJ,IADV,OACmBvJ,EAAKkH,MADxB,QACoClH,EAAKuJ,IAAMvJ,EAAKkH,OAAOuE,QAAQ,UAXtDoD,gBAwBjD,eAAC7F,GAAA,EAAD,CAAKE,GAAI,EAAT,SACI,gBAAC3C,GAAA,EAAD,WACI,gBAACyD,GAAA,EAAD,CAAWpG,QAAQ,QAAnB,UACI,eAACoG,GAAA,EAAUnE,KAAX,UACI,gDAGJ,eAACmE,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,yBACA,gBAACA,GAAA,EAAD,eAAO9H,EAAMwN,mBAIrB,eAAC1E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,eAAO9H,EAAMyN,sBAIrB,eAAC3E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,2BACA,gBAACA,GAAA,EAAD,eAAO9H,EAAM0N,iBAIrB,eAAC5E,GAAA,EAAUnE,KAAX,UACI,gBAACkD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO9H,EAAMiM,oBAKnBjM,EAAMkM,QACJ,gBAACpD,GAAA,EAAUnE,KAAX,WACKsJ,GAAc,eAAC,GAAD,IAEbF,EAGM,eAAC,gBAAD,CACIoB,OAAQnP,EAAMiM,WACdmD,UAhItB,SAACC,GAC3BxM,ENoDgB,SAACD,EAAIyM,GAAL,gDAAuB,WAAOxM,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvCF,EAAS,CACLjF,KAAMrB,KAH6B,EAQnCuG,IADaxD,EAPsB,EAOnCD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbH,SAiBhBC,KAAMwI,IAAN,sBACJhJ,EADI,SAEnByM,EACArM,GApBmC,gBAiB/BM,EAjB+B,EAiB/BA,KAMRT,EAAS,CACLjF,KAAMpB,GACNsB,QAASwF,IAzB0B,kDA8BvCT,EAAS,CACLjF,KAAMnB,GACNqB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCuB,0DAAvB,wDMpDP6L,CAASxB,EAASuB,OA2Ha,eAAC,GAAD,UAUflB,GAAkB,eAAC,GAAD,IAClB7O,GAAYA,EAASwF,SAAW9E,EAAMkM,SAAWlM,EAAMiP,aACpD,eAACnG,GAAA,EAAUnE,KAAX,UACI,eAAClC,GAAA,EAAD,CACI7E,KAAK,SACL4E,UAAU,gBACVoC,QAxIjB,WACnB/B,ENwFoB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLjF,KAAMV,KAHqB,EAQ3B4F,IADaxD,EAPc,EAO3BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbX,SAiBRC,KAAMwI,IAAN,sBACJ5L,EAAMsF,IADF,aAEnB,GACAtC,GApB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAMRT,EAAS,CACLjF,KAAMT,GACNW,QAASwF,IAzBkB,kDA8B/BT,EAAS,CACLjF,KAAMR,GACNU,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCe,0DAAX,wDMxFX8L,CAAavP,KAoIU,6CCjHzBwP,OAnFf,YAAuC,IAAZ/N,EAAW,EAAXA,QAEjBoB,EAAWe,cAEXtD,EAAYqD,aAAY,SAAAlG,GAAK,OAAIA,EAAM6C,aACrCzC,EAA2ByC,EAA3BzC,QAASI,EAAkBqC,EAAlBrC,MAAOoC,EAAWC,EAAXD,OAGhBf,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAcR,OAVA8H,qBAAU,WACF9H,GAAYA,EAASwF,QACrBjC,EAAS2I,MAET/J,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASnC,IAInB,iCACI,yCACCzB,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAE1B,gBAAC6N,GAAA,EAAD,CAAOC,SAAO,EAAC0D,UAAQ,EAACC,OAAK,EAAC1D,YAAU,EAACxJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCACKnC,EAAOnB,KAAI,SAAAc,GAAK,OACb,gCACI,8BAAKA,EAAMsF,MACX,8BAAKtF,EAAMP,MAAQO,EAAMP,KAAK2C,OAC9B,8BAAKpC,EAAMqJ,UAAUC,UAAU,EAAG,MAClC,oCAAMtJ,EAAMiM,cAEZ,8BAAKjM,EAAMkM,OACPlM,EAAMmM,OAAO7C,UAAU,EAAG,IAEtB,oBAAG9G,UAAU,eAAe2C,MAAO,CAAED,MAAO,WAIpD,8BAAKlF,EAAMiP,YACPjP,EAAMkP,YAAY5F,UAAU,EAAG,IAE3B,oBAAG9G,UAAU,eAAe2C,MAAO,CAAED,MAAO,WAIpD,8BACI,eAAC,iBAAD,CAAehB,GAAE,iBAAYlE,EAAMsF,KAAnC,SACI,eAAC7C,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAtBHxC,EAAMsF,iBCyDpCqK,OApGf,YAA6C,IAAnBvH,EAAkB,EAAlBA,MAAO3G,EAAW,EAAXA,QAEvBmO,EAASxH,EAAMS,OAAOjG,GAFY,EAIhBtB,mBAAS,IAJO,oBAIjCc,EAJiC,KAI3B8I,EAJ2B,OAKd5J,mBAAS,IALK,oBAKjCoJ,EALiC,KAK1BC,EAL0B,OAMVrJ,oBAAS,GANC,oBAMjCwD,EANiC,KAMxB+K,EANwB,KAQlChN,EAAWe,cAEXpE,EAAcmE,aAAY,SAAAlG,GAAK,OAAIA,EAAM+B,eACvCvB,EAAyBuB,EAAzBvB,MAAOJ,EAAkB2B,EAAlB3B,QAAS4B,EAASD,EAATC,KAElBK,EAAa6D,aAAY,SAAAlG,GAAK,OAAIA,EAAMqC,cAC/BgQ,EAAgEhQ,EAAvE7B,MAA6B8R,EAA0CjQ,EAAnDjC,QAAiCmS,EAAkBlQ,EAA3BxB,QAyBpD,OAvBA8I,qBAAU,WAEF4I,GACAnN,EAAS,CAAEjF,KAAM7B,KACjB0F,EAAQM,KAAK,oBAGRtC,EAAK2C,MAAQ3C,EAAK6F,MAAQ2E,OAAO2F,IAGlC1E,EAAQzL,EAAK2C,MACbuI,EAASlL,EAAKiL,OACdmF,EAAWpQ,EAAKqF,UAJhBjC,EAASF,GAAeiN,MAQjC,CAACnQ,EAAMmQ,EAAQI,EAAevO,IAQ7B,iCACI,eAAC,QAAD,CAAMyC,GAAG,kBAAT,oBAIA,gBAAC,GAAD,WACI,iDACC6L,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAASpN,QAAQ,SAAjB,SAA2BoN,IAE1CjS,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAEnD,gBAAC0D,GAAA,EAAD,CAAMC,SAlBJ,SAACC,GACnBA,EAAEC,iBACFe,EzBkPkB,SAACpD,GAAD,gDAAU,WAAOoD,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACLjF,KAAMhC,KAHkB,EAQxBkH,IADaxD,EAPW,EAOxBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbd,SAiBLC,KAAMwI,IAAN,4BACEnM,EAAK6F,IADP,KAEnB7F,EACAuD,GApBwB,gBAiBpBM,EAjBoB,EAiBpBA,KAMRT,EAAS,CACLjF,KAAM/B,KAGVgH,EAAS,CACLjF,KAAM9C,EACNgD,QAASwF,IA7Be,kDAkC5BT,EAAS,CACLjF,KAAM9B,GACNgC,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAtCY,0DAAV,wDyBlPTwM,CAAW,CAAE3K,IAAK7F,EAAK6F,IAAKlD,OAAMsI,QAAO5F,cAgBlC,UAEI,gBAACnD,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,OACLoN,YAAY,aACZzI,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACIvE,KAAK,QACLoN,YAAY,GACZzI,MAAOmI,EACPrI,SAAU,SAACR,GAAD,OAAO8I,EAAS9I,EAAES,OAAOC,aAK3C,eAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,SACI,eAAC/H,GAAA,EAAKyL,MAAN,CACIxP,KAAK,WACLyP,MAAM,WACNC,QAASxI,EACTzC,SAAU,SAACR,GAAD,OAAOgO,EAAWhO,EAAES,OAAOgL,cAK7C,eAAC7K,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,8BC4BbwN,OAnHf,YAAgD,IAAnBzO,EAAkB,EAAlBA,QAEnBoB,GAFqC,EAATuF,MAEjBxE,eAEXpG,EAAcmG,aAAY,SAAAlG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,MAAOD,EAASP,EAATO,KAEnCM,EAAgBsF,aAAY,SAAAlG,GAAK,OAAIA,EAAMY,iBAChC8R,EAA8D9R,EAAvER,QAA+BuS,EAAwC/R,EAA/CJ,MAA6BoS,EAAkBhS,EAA3BC,QAE9CC,EAAgBoF,aAAY,SAAAlG,GAAK,OAAIA,EAAMc,iBAChC+R,EAAuF/R,EAAhGV,QAA+B0S,EAAiEhS,EAAxEN,MAA6BuS,EAA2CjS,EAApDD,QAAiCmS,EAAmBlS,EAA5BJ,QAIpEmB,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAEJiC,EAAUE,EAAQO,SAAS4F,OAC/BR,qBAAU,WACNvE,EAAS,CAAEjF,KAAMvE,IAEZiG,EAASwF,SACVrD,EAAQM,KAAK,UAGbyO,EACA/O,EAAQM,KAAR,yBAA+B0O,EAAenL,IAA9C,UAEAzC,EAASoE,GAAa1F,MAG3B,CAACsB,EAAUpB,EAASnC,EAAU+Q,EAAeG,EAAeC,EAAgBlP,IAG/E,IAAMmP,EAAgB,SAAC9N,GAEfyL,OAAOsC,QAAQ,kDACf9N,ElBoDiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACLjF,KAAM7E,IAHmB,EAQzB+J,IADaxD,EAPY,EAOzBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbb,SAiBNC,KAAMwN,OAAN,+BACKhO,EADL,KAEnBI,GAnByB,cAiBrBM,KAKRT,EAAS,CACLjF,KAAM5E,IAvBmB,kDA4B7B6J,EAAS,CACLjF,KAAM3E,EACN6E,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhCa,0DAAR,wDkBpDRoN,CAAcjO,KAQ/B,OACI,iCACI,gBAACiF,GAAA,EAAD,CAAKrF,UAAU,qBAAf,UACI,eAACsF,GAAA,EAAD,UACI,6CAGJ,eAACA,GAAA,EAAD,CAAKtF,UAAU,aAAf,SACI,gBAACC,GAAA,EAAD,CAAQD,UAAU,OAAOoC,QAZZ,WACzB/B,ElBuFqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACLjF,KAAM1E,IAHiB,EAQvB4J,IADaxD,EAPU,EAOvBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbf,SAiBJC,KAAMoG,KAAN,wBAEnB,GACAxG,GApBuB,gBAiBnBM,EAjBmB,EAiBnBA,KAKRT,EAAS,CACLjF,KAAMzE,EACN2E,QAASwF,IAxBc,kDA6B3BT,EAAS,CACLjF,KAAMxE,EACN0E,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCW,0DAAN,0DkB5ET,UACI,oBAAGjB,UAAU,gBADjB,0BAMP2N,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS1N,QAAQ,SAAjB,SAA2B0N,IAG1CE,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAE1C1S,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAE1B,iCACI,gBAAC6N,GAAA,EAAD,CAAOC,SAAO,EAAC0D,UAAQ,EAACC,OAAK,EAAC1D,YAAU,EAACxJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,yCACA,yCACA,+CACA,wCACA,6BAIR,iCACK9E,EAASwB,KAAI,SAAAf,GAAO,OACjB,gCACI,8BAAKA,EAAQmH,MACb,8BAAKnH,EAAQiE,OACb,oCAAMjE,EAAQ6H,SACd,8BAAK7H,EAAQ2S,WACb,8BAAK3S,EAAQ4S,QAEb,gCACI,eAAC,iBAAD,CAAe7M,GAAE,yBAAoB/F,EAAQmH,IAA5B,SAAjB,SACI,eAAC7C,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAIrB,eAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASoC,QAAS,kBAAM8L,EAAcvS,EAAQmH,MAAjF,SACI,oBAAG9C,UAAU,wBAfhBrE,EAAQmH,aAsB7B,eAAC,GAAD,CAAUtH,MAAOA,EAAOD,KAAMA,EAAM+G,SAAS,WC2G1DkM,OArNf,YAAgD,IAAnB5I,EAAkB,EAAlBA,MAAO3G,EAAW,EAAXA,QAE1B8H,EAAYnB,EAAMS,OAAOjG,GAFY,EAInBtB,mBAAS,IAJU,oBAIpCc,EAJoC,KAI9B8I,EAJ8B,OAKjB5J,mBAAS,GALQ,oBAKpC0E,EALoC,KAK7BiL,EAL6B,OAMjB3P,mBAAS,IANQ,oBAMpCmE,EANoC,KAM7ByL,EAN6B,OAOjB5P,mBAAS,IAPQ,oBAOpCyP,EAPoC,KAO7BI,EAP6B,OAQX7P,mBAAS,IARE,oBAQpCwP,EARoC,KAQ1BM,EAR0B,OASH9P,mBAAS,GATN,oBASpC0H,EAToC,KAStBqI,EATsB,OAUL/P,mBAAS,IAVJ,oBAUpCyH,EAVoC,KAUvBuI,EAVuB,OAWThQ,oBAAS,GAXA,oBAWpCiQ,EAXoC,KAWzBC,EAXyB,KAarC3O,EAAWe,cAEX1F,EAAiByF,aAAY,SAAAlG,GAAK,OAAIA,EAAMS,kBAC1CD,EAA4BC,EAA5BD,MAAOJ,EAAqBK,EAArBL,QAASM,EAAYD,EAAZC,QAElBK,EAAgBmF,aAAY,SAAAlG,GAAK,OAAIA,EAAMe,iBAClCsR,EAAgEtR,EAAvEP,MAA6B8R,EAA0CvR,EAAnDX,QAAiCmS,EAAkBxR,EAA3BF,QAGpD8I,qBAAU,WAEF4I,GACAnN,EAAS,CAAEjF,KAAMnE,IACjBgI,EAAQM,KAAK,uBAER5D,EAAQiE,MAAQjE,EAAQmH,MAAQ2E,OAAOV,IAGxC2B,EAAQ/M,EAAQiE,MAChB6O,EAAS9S,EAAQ6H,OACjBkL,EAAS/S,EAAQsH,OACjB0L,EAAShT,EAAQ4S,OACjBK,EAAYjT,EAAQ2S,UACpBO,EAAgBlT,EAAQ6K,cACxBsI,EAAenT,EAAQ4K,cARvBlG,EAASqE,GAAmBqC,MAerC,CAAC1G,EAAU1E,EAASoL,EAAW9H,EAASuO,IAE3C,IAcMyB,EAAiB,yCAAG,WAAO5P,GAAP,wBAAAkB,EAAA,6DAChB2O,EAAO7P,EAAES,OAAOqP,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAcvI,GAE9BiI,GAAa,GAPS,SAUZxO,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZN,SAgBKG,KAAMoG,KAAK,wBAAyBoI,EAAU5O,GAhBnD,gBAgBVM,EAhBU,EAgBVA,KAGR4N,EAAS5N,GACTkO,GAAa,GApBK,kDAuBlBA,GAAa,GAvBK,0DAAH,sDA2BvB,OACI,iCACI,eAAC,QAAD,CAAMtN,GAAG,qBAAT,oBAIA,gBAAC,GAAD,WACI,kDACC6L,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAASpN,QAAQ,SAAjB,SAA2BoN,IAE1CjS,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAEnD,gBAAC0D,GAAA,EAAD,CAAMC,SAtDJ,SAACC,GACnBA,EAAEC,iBACFe,EnBuHqB,SAAC1E,GAAD,gDAAa,WAAO0E,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACLjF,KAAMtE,IAHwB,EAQ9BwJ,IADaxD,EAPiB,EAO9BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbR,SAiBXC,KAAMwI,IAAN,+BACKzN,EAAQmH,IADb,KAEnBnH,EACA6E,GApB8B,gBAiB1BM,EAjB0B,EAiB1BA,KAKRT,EAAS,CACLjF,KAAMrE,EACNuE,QAASwF,IAIbT,EAAS,CACLjF,KAAM/E,EACNiF,QAASwF,IA9BqB,kDAmClCT,EAAS,CACLjF,KAAMpE,EACNsE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAvCkB,0DAAb,wDmBvHZsO,CAAc,CACnBzM,IAAKiE,EACLnH,OACA4D,QACAP,QACAsL,QACAD,WACA9H,eACAD,kBA4CY,UAEI,gBAACpH,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,OACLoN,YAAY,GACZzI,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,SACLoN,YAAY,GACZzI,MAAOyD,EACP3D,SAAU,SAACR,GAAD,OAAOoP,EAASpP,EAAES,OAAOC,aAM3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,OACLoN,YAAY,GACZzI,MAAOkD,EACPpD,SAAU,SAACR,GAAD,OAAOqP,EAASrP,EAAES,OAAOC,UAIvC,eAACZ,GAAA,EAAKqQ,KAAN,CACIpP,GAAG,aACHyK,MAAM,cACN4E,QAAM,EACN5P,SAAUoP,IAIbF,GAAa,eAAC,GAAD,OAKlB,gBAAC5P,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,oBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,OACLoN,YAAY,GACZzI,MAAOwO,EACP1O,SAAU,SAACR,GAAD,OAAOsP,EAAStP,EAAES,OAAOC,aAK3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,eAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,oBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,SACLoN,YAAY,GACZzI,MAAOyG,EACP3G,SAAU,SAACR,GAAD,OAAOwP,EAAgBxP,EAAES,OAAOC,aAKlD,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,2BACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,OACLoN,YAAY,GACZzI,MAAOuO,EACPzO,SAAU,SAACR,GAAD,OAAOuP,EAAYvP,EAAES,OAAOC,aAK9C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,cAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,6BACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIvE,KAAK,OACLoN,YAAY,GACZzI,MAAOwG,EACP1G,SAAU,SAACR,GAAD,OAAOyP,EAAezP,EAAES,OAAOC,aAMjD,eAACE,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,6BCzHb8M,OAnFf,YAAuC,IAAZ/N,EAAW,EAAXA,QAEjBoB,EAAWe,cAEXtD,EAAYqD,aAAY,SAAAlG,GAAK,OAAIA,EAAM6C,aACrCzC,EAA2ByC,EAA3BzC,QAASI,EAAkBqC,EAAlBrC,MAAOoC,EAAWC,EAAXD,OAGhBf,EADUqE,aAAY,SAAAlG,GAAK,OAAIA,EAAM4B,aACrCC,SAcR,OAVA8H,qBAAU,WACF9H,GAAYA,EAASwF,QACrBjC,EAAS2I,MAET/J,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASnC,IAInB,iCACI,yCACCzB,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAE1B,gBAAC6N,GAAA,EAAD,CAAOC,SAAO,EAAC0D,UAAQ,EAACC,OAAK,EAAC1D,YAAU,EAACxJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,0CACA,uCACA,wCACA,yCACA,wCACA,6BAIR,iCACKnC,EAAOnB,KAAI,SAAAc,GAAK,OACb,gCACI,8BAAKA,EAAMsF,MACX,8BAAKtF,EAAMP,MAAQO,EAAMP,KAAK2C,OAC9B,8BAAKpC,EAAMqJ,UAAUC,UAAU,EAAG,MAClC,oCAAMtJ,EAAMiM,cAEZ,8BAAKjM,EAAMkM,OACPlM,EAAMmM,OAAO7C,UAAU,EAAG,IAEtB,oBAAG9G,UAAU,eAAe2C,MAAO,CAAED,MAAO,WAIpD,8BAAKlF,EAAMiP,YACPjP,EAAMkP,YAAY5F,UAAU,EAAG,IAE3B,oBAAG9G,UAAU,eAAe2C,MAAO,CAAED,MAAO,WAIpD,8BACI,eAAC,iBAAD,CAAehB,GAAE,iBAAYlE,EAAMsF,KAAnC,SACI,eAAC7C,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,4BAtBHxC,EAAMsF,iBCFpC4M,OA9Bf,WACE,OACE,gBAAC,cAAD,WACE,eAAC,GAAD,IACA,uBAAM1P,UAAU,OAAhB,SACE,gBAACyB,GAAA,EAAD,WACE,eAAC,KAAD,CAAOkO,KAAK,IAAIC,UAAWzK,GAAY0K,OAAK,IAC5C,eAAC,KAAD,CAAOF,KAAK,SAASC,UAAW3H,KAChC,eAAC,KAAD,CAAO0H,KAAK,YAAYC,UAAWnH,KACnC,eAAC,KAAD,CAAOkH,KAAK,WAAWC,UAAW3G,KAClC,eAAC,KAAD,CAAO0G,KAAK,YAAYC,UAAW3F,KACnC,eAAC,KAAD,CAAO0F,KAAK,cAAcC,UAAW7E,KACrC,eAAC,KAAD,CAAO4E,KAAK,aAAaC,UAAWvE,KACpC,eAAC,KAAD,CAAOsE,KAAK,WAAWC,UAAWlF,KAClC,eAAC,KAAD,CAAOiF,KAAK,eAAeC,UAAWjK,KACtC,eAAC,KAAD,CAAOgK,KAAK,aAAaC,UAAWpI,KAEpC,eAAC,KAAD,CAAOmI,KAAK,kBAAkBC,UAAWE,KACzC,eAAC,KAAD,CAAOH,KAAK,uBAAuBC,UAAWzC,KAE9C,eAAC,KAAD,CAAOwC,KAAK,qBAAqBC,UAAWlC,KAC5C,eAAC,KAAD,CAAOiC,KAAK,0BAA0BC,UAAWpB,KAEjD,eAAC,KAAD,CAAOmB,KAAK,mBAAmBC,UAAW5C,cChCrC+C,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCEdQ,IAASC,OACP,eAAC,IAAD,CAAUhS,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFuN,SAAS0E,eAAe,SAM1BX,M","file":"static/js/main.1181fcd3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n } from '../constants/userConstants'\r\n\r\n\r\n\r\n export const userLoginReducer= (state= { }, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return{ loading:true }\r\n \r\n        case USER_LOGIN_SUCCESS:\r\n            return{ loading:false, userInfo:action.payload} \r\n \r\n        case USER_LOGIN_FAIL:\r\n             return{ loading:false,error:action.payload }\r\n        \r\n        case USER_LOGOUT:\r\n            return { }\r\n       \r\n         default: \r\n             return state\r\n      }\r\n }\r\n\r\n export const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Buscar\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Fitness Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox /> \r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Carrito</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Perfil</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Usuarios</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Productos</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Ordenes</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header ","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Dipackaging</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className= \"rating\">\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value>=1\r\n                    ? 'fas fa-star'\r\n                    :value >=0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value>=2\r\n                    ? 'fas fa-star'\r\n                    :value >=1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value>=3\r\n                    ? 'fas fa-star'\r\n                    :value >=2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value>=4\r\n                    ? 'fas fa-star'\r\n                    :value >=3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style = {{color}} className={\r\n                    value>=5\r\n                    ? 'fas fa-star'\r\n                    :value >=4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className = \"my-3 p-3 rounded\">\r\n          \r\n               <Link to={`/product/${product._id}`}>\r\n                   <Card.Img  src= {product.image}/>\r\n               </Link>\r\n            <Card.Body>\r\n                <Link to = {`/product/${product._id}`}>\r\n                    <Card.Title as = \"div\">\r\n                          <strong> {product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                    <Card.Text>\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                    </Card.Text>\r\n                    <Card.Text as=\"h3\">\r\n                        ${product.price}\r\n                    </Card.Text>\r\n\r\n                \r\n            </Card.Body>\r\n        </Card>\r\n        \r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <spinner \r\n            animation='border'\r\n            role='status'\r\n            style ={{\r\n                 height:'100px',\r\n                 width: '100px',\r\n                 margin:'auto',\r\n                 display: 'block',\r\n\r\n            }}>\r\n            <span className='sr-only'>Cargando...</span>\r\n        </spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant = {variant}>\r\n             {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Últimos Productos</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Volver</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Precio: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Descripción: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Precio:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Estado:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Cantidad</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Agregar al Carrito\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>Sin Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4> Escribí tu review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Enviada</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Seleccione...</option>\r\n                                                            <option value='1'>1 - Muy Malo</option>\r\n                                                            <option value='2'>2 - Malo</option>\r\n                                                            <option value='3'>3 - Bueno</option>\r\n                                                            <option value='4'>4 - Muy Bueno</option>\r\n                                                            <option value='5'>5 - Excelente</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Enviar\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Por favor <Link to='/login'>inicie sesión</Link> para escribir  su opinión</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from 'axios'\r\nimport { CART_ADD_ITEM ,\r\n         CART_REMOVE_ITEM, \r\n         CART_SAVE_SHIPPING_ADDRESS,\r\n         CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\";\r\n\r\n\r\nexport const addToCart = (id,qty)=> async(dispatch,getState) => {\r\n    const { data } =await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty \r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) =>{\r\n    dispatch ({\r\n        type: CART_REMOVE_ITEM,\r\n        payload:id,\r\n\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) =>{\r\n    dispatch ({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Carrito</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        tu carrito esta vacío <Link to='/'>podés volver</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","  \r\nimport React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Iniciar Sesión</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Ingrese su Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Contraseña</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Ingrese su contraseña'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Ingresar\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Sos un nuevo usuario <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Registrate acá\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Las contraseñas no coinciden')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Registrate</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Ingrese su nombre'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Ingrese su Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Contraseña</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Ingrese Contraseña'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirme Contraseña</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirme Contraseña'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Registrese\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Ya tenes una cuenta? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        ingresá aqui\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('las contraseñas no coinciden')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Tu perfil</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Nombre</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder=''\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder=''\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Contraseña</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder=''\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirme Contraseña</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder=''\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        enviar\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>Mis Órdenes</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Pago</th>\r\n                                        <th>Envío</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Detalle</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Envío</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Envío</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Pago</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Pago</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport  CheckoutSteps  from '../components/CheckoutSteps'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction ShippingScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n   \r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n            e.preventDefault()\r\n            dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n           history.push('/payment')\r\n\r\n    }\r\n    return (\r\n       <FormContainer>\r\n               <CheckoutSteps step1 step2 />\r\n           <h1>Envío</h1>\r\n           <Form onSubmit={submitHandler}>\r\n               <Form.Group controlId='address'>\r\n                    <Form.Label>Dirección</Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder=''\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='city'>\r\n                    <Form.Label>Ciudad</Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder=''\r\n                            value={city ? city : ''}\r\n                            onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Codigo Postal</Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder=''\r\n                            value={postalCode ? postalCode: ''}\r\n                            onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='country'>\r\n                    <Form.Label>Provincia</Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder=''\r\n                            value={country ? country : ''}\r\n                            onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n               </Form.Group>\r\n               <Button type='submit' variant='primary'>\r\n                    Continuar\r\n                </Button>\r\n\r\n           </Form>\r\n\r\n       </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Seleccione Método de Pago</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continar\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Envio</h2>\r\n\r\n                            <p>\r\n                                <strong>Datos de Envío: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Método de Pago</h2>\r\n                            <p>\r\n                                <strong>Método: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Produtos</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Su carrito está vacío\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Orden</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Productos:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Envío:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Comisión:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Termine el pedido\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder , deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Orden: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Datos del Usuario </h2>\r\n                                    <p><strong>Nombre: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Envío: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Enviado {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>No Enviado</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Método de Pago</h2>\r\n                                    <p>\r\n                                        <strong>Método: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Pagado {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>No Pago</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2></h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Su orden está vacía\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Orden Total</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Productos:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Envío:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Comisión:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Volver\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Editar Usuario</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Nombre</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder=''\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Crear Producto\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NOMBRE</th>\r\n                                        <th>PRECIO</th>\r\n                                        <th>CATEGORÍA</th>\r\n                                        <th>MARCA</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Volver\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Editar Producto</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Nombre</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder=''\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Precio</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Imagen</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Marca</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Categoría</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Descripción</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Subir\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USUARIO</th>\r\n                                    <th>INFO</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAGADO</th>\r\n                                    <th>ENVIO</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Detalles\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport './bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}